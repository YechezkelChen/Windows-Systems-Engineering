<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol">

    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WindowStyle1" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <hc:SimplePanel>
                                <Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26" Source="img/icons8-home-48 (1).png" Margin="9,9,0,0"/>
                            </hc:SimplePanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}"/>
                                <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type ButtonBase}">
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                        <Setter Property="Padding" Value="10,6"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle RadiusY="4" RadiusX="4">
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="Margin" Value="-2"/>
                                                                    <Setter Property="Opacity" Value="0.6"/>
                                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                    <Setter Property="StrokeThickness" Value="2"/>
                                                                    <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Style.BasedOn>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.6"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <hc:SimplePanel>
                                <Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26" Source="img/icons8-service-bell-48.png" Margin="9,9,0,0"/>
                            </hc:SimplePanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}"/>
                                <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type ButtonBase}">
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                        <Setter Property="Padding" Value="10,6"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle RadiusY="4" RadiusX="4">
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="Margin" Value="-2"/>
                                                                    <Setter Property="Opacity" Value="0.6"/>
                                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                    <Setter Property="StrokeThickness" Value="2"/>
                                                                    <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Style.BasedOn>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.6"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <hc:SimplePanel>
                                <Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26" Source="img/icons8-user-group-48.png" Margin="9,9,0,0"/>
                            </hc:SimplePanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}"/>
                                <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type ButtonBase}">
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                        <Setter Property="Padding" Value="10,6"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle RadiusY="4" RadiusX="4">
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="Margin" Value="-2"/>
                                                                    <Setter Property="Opacity" Value="0.6"/>
                                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                    <Setter Property="StrokeThickness" Value="2"/>
                                                                    <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Style.BasedOn>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.6"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <hc:SimplePanel>
                                <Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26" Source="img/icons8-stack-of-paper-30.png" Margin="9,9,0,0"/>
                            </hc:SimplePanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}"/>
                                <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type ButtonBase}">
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                        <Setter Property="Padding" Value="10,6"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle RadiusY="4" RadiusX="4">
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="Margin" Value="-2"/>
                                                                    <Setter Property="Opacity" Value="0.6"/>
                                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                    <Setter Property="StrokeThickness" Value="2"/>
                                                                    <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Style.BasedOn>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.6"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle5" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <hc:SimplePanel>
                                <Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26" Source="img/icons8-setting-32.png" Margin="9,8,0,0"/>
                            </hc:SimplePanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}"/>
                                <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type ButtonBase}">
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                        <Setter Property="Padding" Value="10,6"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle RadiusY="4" RadiusX="4">
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="Margin" Value="-2"/>
                                                                    <Setter Property="Opacity" Value="0.6"/>
                                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                    <Setter Property="StrokeThickness" Value="2"/>
                                                                    <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Style.BasedOn>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.6"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle6" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.BasedOn>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <hc:SimplePanel>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                    <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Path x:Name="PathMain" Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" Width="{TemplateBinding hc:IconElement.Width}"/>
                                        <ContentPresenter x:Name="ContentPresenterMain" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="6,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                                <TextBlock HorizontalAlignment="Left" Height="15" TextWrapping="Wrap" Text="&gt;" VerticalAlignment="Top" Width="15" Margin="7.5,2,0,0" FontSize="14" FontWeight="Bold" Foreground="White"/>
                            </hc:SimplePanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="ContentPresenterMain" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="PathMain" Value="Collapsed"/>
                                    <Setter Property="Margin" TargetName="ContentPresenterMain" Value="0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type ButtonBase}">
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                        <Setter Property="Padding" Value="10,6"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type Control}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Setter Property="FontSize" Value="12"/>
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle RadiusY="4" RadiusX="4">
                                                            <Rectangle.Style>
                                                                <Style TargetType="{x:Type Rectangle}">
                                                                    <Setter Property="Margin" Value="-2"/>
                                                                    <Setter Property="Opacity" Value="0.6"/>
                                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                    <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                    <Setter Property="StrokeThickness" Value="2"/>
                                                                    <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                </Style>
                                                            </Rectangle.Style>
                                                        </Rectangle>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Style.BasedOn>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value="0.9"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value="0.6"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>